package com.global.api.entities;

import com.global.api.entities.enums.PayByLinkStatus;
import com.global.api.entities.enums.PayByLinkType;
import com.global.api.entities.enums.PaymentMethodUsageMode;
import lombok.Getter;
import lombok.Setter;
import lombok.experimental.Accessors;
import org.joda.time.DateTime;

import java.util.List;

@Accessors(chain = true)
@Getter
@Setter
public class PayByLinkResponse {
    // A unique identifier generated by Global Payments to identify the link.
    private String id;
    // A meaningful label for the merchant account set by Global Payments.
    private String accountName;
    // The URL that the customer should be redirected to in order to make their payment.
    private String url;
    // Indicates where a link is in its lifecycle.
    private PayByLinkStatus status;
    // Describes the type of link that will be created.
    private PayByLinkType type;
    // Indicates whether the link can be used once or multiple times
    private PaymentMethodUsageMode usageMode;
    // The number of the times that the link can be used or paid.
    private int usageLimit;
    // Merchant defined field to reference the transaction.
    private String reference;
    // A descriptive name for the link. This will be visible to the customer on the payment page.
    private String name;
    // A detailed description of your link that will be visible to the customer on the payment page.
    private String description;
    // Indicates if you want to capture the customers shipping information on the hosted payment page.
    // If you enable this field you can also set an optional shipping fee in the shipping_amount.
    private Boolean isShippable;
    // The number of times a link has been viewed.
    private String viewedCount;
    // Indicates the date and time after which the link can no longer be used or paid.
    private DateTime expirationDate;
    // Images that will be displayed to the customer on the payment page.
    private List<String> images;
    private String[] allowedPaymentMethods;

    public Boolean isShippable() {
        return isShippable;
    }

    public void isShippable(Boolean shippable) {
        isShippable = shippable;
    }

}